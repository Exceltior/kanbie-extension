{"ast":null,"code":"var _jsxFileName = \"/home/atude/projects/kanbie/src/App.js\";\nimport React, { useState } from 'react';\nimport './App.css';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport LayersOutlineIcon from 'mdi-react/LayersOutlineIcon';\nconst maxItems = 5;\nconst initColumns = [{\n  title: \"To-do\",\n  items: [{\n    id: 1,\n    content: 'Add capability to add a card in a lane'\n  }, {\n    id: 2,\n    content: 'Add capability to add a card in a lane 2'\n  }, {\n    id: 10,\n    content: 'Add capability to add a card in a lane 3'\n  }]\n}, {\n  title: \"Doing\",\n  items: [{\n    id: 3,\n    content: 'Add capability to add a card in a lane'\n  }, {\n    id: 4,\n    content: 'Add capability to add a card in a lane 2'\n  }]\n}, {\n  title: \"Done\",\n  items: [{\n    id: 5,\n    content: 'Add capability to add a card in a lane'\n  }, {\n    id: 6,\n    content: 'Add capability to add a card in a lane 2'\n  }]\n}];\n\nfunction App() {\n  const [columns, setColumns] = useState(initColumns);\n\n  const onDragEnd = result => {\n    const {\n      source,\n      destination\n    } = result;\n    if (!destination) return; //Different column\n\n    if (source.droppableId !== destination.droppableId) {\n      const sourceItems = columns.filter(column => column.title === source.droppableId)[0].items;\n      const destItems = columns.filter(column => column.title === destination.droppableId)[0].items;\n      if (destItems.length >= 5) return;\n      const [removed] = sourceItems.splice(source.index, 1);\n      destItems.splice(destination.index, 0, removed);\n    } else {\n      //Same column\n      const sourceItems = columns.filter(column => column.title === source.droppableId)[0].items;\n      const [removed] = sourceItems.splice(source.index, 1);\n      sourceItems.splice(destination.index, 0, removed);\n    }\n\n    console.log(columns);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"header-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"kanbie\")), React.createElement(\"div\", {\n    className: \"main-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(DragDropContext, {\n    onDragEnd: onDragEnd,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, columns.map(column => React.createElement(Droppable, {\n    droppableId: column.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, (provided, snapshot) => React.createElement(\"div\", Object.assign({}, provided.droppableProps, {\n    ref: provided.innerRef,\n    style: {\n      background: snapshot.isDraggingOver ? \"#1f1f1f\" : \"#121212\"\n    },\n    className: \"droppable-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"column-header-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(LayersOutlineIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"column-heading\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, column.title)), column.items.map((item, i) => React.createElement(Draggable, {\n    key: item.id,\n    draggableId: item.content + item.id,\n    index: i,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, (provided, snapshot) => React.createElement(\"div\", Object.assign({}, provided.draggableProps, provided.dragHandleProps, {\n    ref: provided.innerRef,\n    style: {\n      userSelect: 'none',\n      backgroundColor: snapshot.isDragging ? \"#400033\" : \"#272727\",\n      ...provided.draggableProps.style\n    },\n    className: \"draggable-card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }), item.content))), provided.placeholder))))));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/atude/projects/kanbie/src/App.js"],"names":["React","useState","DragDropContext","Droppable","Draggable","LayersOutlineIcon","maxItems","initColumns","title","items","id","content","App","columns","setColumns","onDragEnd","result","source","destination","droppableId","sourceItems","filter","column","destItems","length","removed","splice","index","console","log","map","provided","snapshot","droppableProps","innerRef","background","isDraggingOver","item","i","draggableProps","dragHandleProps","userSelect","backgroundColor","isDragging","style","placeholder"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport LayersOutlineIcon from 'mdi-react/LayersOutlineIcon';\n\nconst maxItems = 5;\n\nconst initColumns = [\n  {\n    title: \"To-do\",\n    items: [\n      {\n        id: 1,\n        content: 'Add capability to add a card in a lane'\n      },\n      {\n        id: 2,\n        content: 'Add capability to add a card in a lane 2'\n      },\n      {\n        id: 10,\n        content: 'Add capability to add a card in a lane 3'\n      },\n    ]\n  },\n  {\n    title: \"Doing\",\n    items: [\n      {\n        id: 3,\n        content: 'Add capability to add a card in a lane'\n      },\n      {\n        id: 4,\n        content: 'Add capability to add a card in a lane 2'\n      },\n    ]\n  },\n  {\n    title: \"Done\",\n    items: [\n      {\n        id: 5,\n        content: 'Add capability to add a card in a lane'\n      },\n      {\n        id: 6,\n        content: 'Add capability to add a card in a lane 2'\n      },\n    ]\n  },\n];\n\nfunction App() {\n  const [columns, setColumns] = useState(initColumns);\n\n  const onDragEnd = (result) => {\n    const { source, destination } = result;\n\n    if(!destination) return;\n\n    //Different column\n    if(source.droppableId !== destination.droppableId) {\n      const sourceItems = columns.filter((column => column.title === source.droppableId))[0].items;\n      const destItems = columns.filter((column => column.title === destination.droppableId))[0].items;\n      if(destItems.length >= 5) return;\n      const [removed] = sourceItems.splice(source.index, 1);\n      destItems.splice(destination.index, 0, removed);\n    } else {\n      //Same column\n      const sourceItems = columns.filter((column => column.title === source.droppableId))[0].items;\n      const [removed] = sourceItems.splice(source.index, 1);\n      sourceItems.splice(destination.index, 0, removed);\n    }\n\n    console.log(columns)\n  }\n\n  return (\n    <div>\n      <div className=\"header-container\">\n        <div className=\"header\">\n          kanbie\n        </div>\n      </div>\n      <div className=\"main-container\">\n        \n        <DragDropContext\n          onDragEnd={onDragEnd}\n        >\n          {columns.map(column => (\n            <Droppable droppableId={column.title}>\n              {(provided, snapshot) => (\n                <div\n                  {...provided.droppableProps}\n                  ref={provided.innerRef}\n                  style={{\n                    background: snapshot.isDraggingOver ? \"#1f1f1f\" : \"#121212\",\n                  }}\n                  className=\"droppable-container\"\n                > \n                  <div className=\"column-header-container\">\n                    <LayersOutlineIcon/>\n                    <div className=\"column-heading\">{column.title}</div>\n                  </div>\n                  {column.items.map((item, i) => (\n                    <Draggable key={item.id} draggableId={item.content + item.id} index={i}>\n                      {(provided, snapshot) => (\n                        <div \n                          {...provided.draggableProps}\n                          {...provided.dragHandleProps}\n                          ref={provided.innerRef}\n                          style={{\n                            userSelect: 'none',\n                            backgroundColor: snapshot.isDragging ? \"#400033\" : \"#272727\",\n                            ...provided.draggableProps.style\n                          }}\n                          className=\"draggable-card\"\n                        >\n                          {item.content}\n                        </div>\n                      )}\n                    </Draggable>\n                  ))}\n                  {provided.placeholder}\n                </div>\n              )}\n            </Droppable>\n          ))}\n        </DragDropContext>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}