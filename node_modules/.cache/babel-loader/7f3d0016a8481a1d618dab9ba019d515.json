{"ast":null,"code":"import _defineProperty from\"/home/atude/projects/kanbie/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/home/atude/projects/kanbie/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"/home/atude/projects/kanbie/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/home/atude/projects/kanbie/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import'./App.css';import{DragDropContext,Droppable,Draggable}from'react-beautiful-dnd';var initColumns=[{title:'To-do',items:[{id:1,content:'Add capability to add a card in a lane'},{id:10,content:'Add capability to add a card in a lane 2'}]},{title:'Doing',items:[{id:2,content:'Move a card between the lanes'}]},{title:'Done',items:[{id:3,content:'Move a card between the lanes 222'}]}];function App(){var _useState=useState(initColumns),_useState2=_slicedToArray(_useState,2),columns=_useState2[0],setColumns=_useState2[1];var onDragEnd=function onDragEnd(result){var source=result.source,destination=result.destination;if(!destination)return;var column=columns[source.droppableId];console.log(column);var copiedItems=_toConsumableArray(column.items);var _copiedItems$splice=copiedItems.splice(source.index,1),_copiedItems$splice2=_slicedToArray(_copiedItems$splice,1),removed=_copiedItems$splice2[0];copiedItems.splice(destination.index,0,removed);setColumns(_objectSpread({},columns,_defineProperty({},source.droppableId,_objectSpread({},column,{items:copiedItems}))));};return React.createElement(\"div\",{style:{display:\"flex\",justifyContent:\"center\",height:\"100%\"}},React.createElement(DragDropContext,{onDragEnd:onDragEnd},columns.map(function(column){return React.createElement(Droppable,{droppableId:column.title},function(provided,snapshot){return React.createElement(\"div\",Object.assign({},provided.droppableProps,{ref:provided.innerRef,style:{background:snapshot.isDraggingOver?'lightblue':'lightgrey',padding:\"4px\",margin:\"10px\",width:\"200px\",minHeight:\"400px\"}}),column.items.map(function(item,i){return React.createElement(Draggable,{key:item.id,draggableId:item.content+item.id,index:i},function(provided,snapshot){return React.createElement(\"div\",Object.assign({},provided.draggableProps,provided.dragHandleProps,{ref:provided.innerRef,style:_objectSpread({userSelect:'none',padding:\"16px\",minHeight:\"50px\",backgroundColor:snapshot.isDragging?'#263b4a':'#456c86',color:\"white\"},provided.draggableProps.style)}),item.content);});}),provided.placeholder);});})));}export default App;","map":{"version":3,"sources":["/home/atude/projects/kanbie/src/App.js"],"names":["React","useState","DragDropContext","Droppable","Draggable","initColumns","title","items","id","content","App","columns","setColumns","onDragEnd","result","source","destination","column","droppableId","console","log","copiedItems","splice","index","removed","display","justifyContent","height","map","provided","snapshot","droppableProps","innerRef","background","isDraggingOver","padding","margin","width","minHeight","item","i","draggableProps","dragHandleProps","userSelect","backgroundColor","isDragging","color","style","placeholder"],"mappings":"icAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAO,WAAP,CAEA,OAASC,eAAT,CAA0BC,SAA1B,CAAqCC,SAArC,KAAsD,qBAAtD,CAEA,GAAMC,CAAAA,WAAW,CAAG,CAClB,CACEC,KAAK,CAAE,OADT,CAEEC,KAAK,CAAE,CACL,CACEC,EAAE,CAAE,CADN,CAEEC,OAAO,CAAE,wCAFX,CADK,CAKL,CACED,EAAE,CAAE,EADN,CAEEC,OAAO,CAAE,0CAFX,CALK,CAFT,CADkB,CAclB,CACEH,KAAK,CAAE,OADT,CAEEC,KAAK,CAAE,CACL,CACEC,EAAE,CAAE,CADN,CAEEC,OAAO,CAAE,+BAFX,CADK,CAFT,CAdkB,CAuBlB,CACEH,KAAK,CAAE,MADT,CAEEC,KAAK,CAAE,CACL,CACEC,EAAE,CAAE,CADN,CAEEC,OAAO,CAAE,mCAFX,CADK,CAFT,CAvBkB,CAApB,CAkCA,QAASC,CAAAA,GAAT,EAAe,eACiBT,QAAQ,CAACI,WAAD,CADzB,wCACNM,OADM,eACGC,UADH,eAGb,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,MAAD,CAAY,IACpBC,CAAAA,MADoB,CACID,MADJ,CACpBC,MADoB,CACZC,WADY,CACIF,MADJ,CACZE,WADY,CAG5B,GAAG,CAACA,WAAJ,CAAiB,OAEjB,GAAMC,CAAAA,MAAM,CAAGN,OAAO,CAACI,MAAM,CAACG,WAAR,CAAtB,CACAC,OAAO,CAACC,GAAR,CAAYH,MAAZ,EACA,GAAMI,CAAAA,WAAW,oBAAOJ,MAAM,CAACV,KAAd,CAAjB,CAP4B,wBAQVc,WAAW,CAACC,MAAZ,CAAmBP,MAAM,CAACQ,KAA1B,CAAiC,CAAjC,CARU,4DAQrBC,OARqB,yBAS5BH,WAAW,CAACC,MAAZ,CAAmBN,WAAW,CAACO,KAA/B,CAAsC,CAAtC,CAAyCC,OAAzC,EAEAZ,UAAU,kBACLD,OADK,oBAEPI,MAAM,CAACG,WAFA,kBAGHD,MAHG,EAINV,KAAK,CAAEc,WAJD,KAAV,CAOD,CAlBD,CAoBA,MACE,4BACE,KAAK,CAAE,CACLI,OAAO,CAAE,MADJ,CAELC,cAAc,CAAE,QAFX,CAGLC,MAAM,CAAE,MAHH,CADT,EAOE,oBAAC,eAAD,EACE,SAAS,CAAEd,SADb,EAGGF,OAAO,CAACiB,GAAR,CAAY,SAAAX,MAAM,QACjB,qBAAC,SAAD,EAAW,WAAW,CAAEA,MAAM,CAACX,KAA/B,EACG,SAACuB,QAAD,CAAWC,QAAX,QACC,4CACMD,QAAQ,CAACE,cADf,EAEE,GAAG,CAAEF,QAAQ,CAACG,QAFhB,CAGE,KAAK,CAAE,CACLC,UAAU,CAAEH,QAAQ,CAACI,cAAT,CAA0B,WAA1B,CAAwC,WAD/C,CAELC,OAAO,CAAE,KAFJ,CAGLC,MAAM,CAAE,MAHH,CAILC,KAAK,CAAE,OAJF,CAKLC,SAAS,CAAE,OALN,CAHT,GAWGrB,MAAM,CAACV,KAAP,CAAaqB,GAAb,CAAiB,SAACW,IAAD,CAAOC,CAAP,QAChB,qBAAC,SAAD,EAAW,GAAG,CAAED,IAAI,CAAC/B,EAArB,CAAyB,WAAW,CAAE+B,IAAI,CAAC9B,OAAL,CAAe8B,IAAI,CAAC/B,EAA1D,CAA8D,KAAK,CAAEgC,CAArE,EACG,SAACX,QAAD,CAAWC,QAAX,QACC,4CACMD,QAAQ,CAACY,cADf,CAEMZ,QAAQ,CAACa,eAFf,EAGE,GAAG,CAAEb,QAAQ,CAACG,QAHhB,CAIE,KAAK,gBACHW,UAAU,CAAE,MADT,CAEHR,OAAO,CAAE,MAFN,CAGHG,SAAS,CAAE,MAHR,CAIHM,eAAe,CAAEd,QAAQ,CAACe,UAAT,CAAsB,SAAtB,CAAkC,SAJhD,CAKHC,KAAK,CAAE,OALJ,EAMAjB,QAAQ,CAACY,cAAT,CAAwBM,KANxB,CAJP,GAaGR,IAAI,CAAC9B,OAbR,CADD,EADH,CADgB,EAAjB,CAXH,CAgCGoB,QAAQ,CAACmB,WAhCZ,CADD,EADH,CADiB,EAAlB,CAHH,CAPF,CADF,CAsDD,CAED,cAAetC,CAAAA,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\n\nconst initColumns = [\n  {\n    title: 'To-do',\n    items: [\n      {\n        id: 1,\n        content: 'Add capability to add a card in a lane'\n      },\n      {\n        id: 10,\n        content: 'Add capability to add a card in a lane 2'\n      },\n    ]\n  },\n  {\n    title: 'Doing',\n    items: [\n      {\n        id: 2,\n        content: 'Move a card between the lanes'\n      },\n    ]\n  },\n  {\n    title: 'Done',\n    items: [\n      {\n        id: 3,\n        content: 'Move a card between the lanes 222'\n      },\n    ]\n  }\n];\n\nfunction App() {\n  const [columns, setColumns] = useState(initColumns);\n\n  const onDragEnd = (result) => {\n    const { source, destination } = result;\n\n    if(!destination) return;\n\n    const column = columns[source.droppableId];\n    console.log(column);\n    const copiedItems = [...column.items];\n    const [removed] = copiedItems.splice(source.index, 1);\n    copiedItems.splice(destination.index, 0, removed);\n\n    setColumns({\n      ...columns,\n      [source.droppableId]: {\n        ...column,\n        items: copiedItems,\n      }\n    });\n  }\n\n  return (\n    <div \n      style={{ \n        display: \"flex\",\n        justifyContent: \"center\",\n        height: \"100%\"\n      }}\n    >\n      <DragDropContext\n        onDragEnd={onDragEnd}\n      >\n        {columns.map(column => (\n          <Droppable droppableId={column.title}>\n            {(provided, snapshot) => (\n              <div\n                {...provided.droppableProps}\n                ref={provided.innerRef}\n                style={{\n                  background: snapshot.isDraggingOver ? 'lightblue' : 'lightgrey',\n                  padding: \"4px\",\n                  margin: \"10px\",\n                  width: \"200px\",\n                  minHeight: \"400px\",\n                }}\n              >\n                {column.items.map((item, i) => (\n                  <Draggable key={item.id} draggableId={item.content + item.id} index={i}>\n                    {(provided, snapshot) => (\n                      <div \n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                        ref={provided.innerRef}\n                        style={{\n                          userSelect: 'none',\n                          padding: \"16px\",\n                          minHeight: \"50px\",\n                          backgroundColor: snapshot.isDragging ? '#263b4a' : '#456c86',\n                          color: \"white\",\n                          ...provided.draggableProps.style\n                        }}\n                      >\n                        {item.content}\n                      </div>\n                    )}\n                  </Draggable>\n                ))}\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n        ))}\n      </DragDropContext>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}