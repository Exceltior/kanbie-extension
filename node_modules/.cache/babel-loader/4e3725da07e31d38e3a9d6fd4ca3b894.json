{"ast":null,"code":"var _jsxFileName = \"/home/atude/projects/kanbie/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport CheckboxMarkedCircleOutlineIcon from 'mdi-react/CheckboxMarkedCircleOutlineIcon';\nimport CheckboxMarkedCircleIcon from 'mdi-react/CheckboxMarkedCircleIcon';\nimport ProgressCheckIcon from 'mdi-react/ProgressCheckIcon';\nimport DeleteForeverIcon from 'mdi-react/DeleteForeverIcon';\nimport PlusIcon from 'mdi-react/PlusIcon';\nimport initColumns from './initColumns';\nimport KanbieLogo from \"./assets/kanbie-logo.svg\";\nconst maxItems = 5;\n\nfunction App() {\n  const [columns, setColumns] = useState();\n  const [loaded, setLoaded] = useState(false);\n  useEffect(() => {\n    const getColumns = localStorage.getItem(\"columns\");\n\n    if (!getColumns) {\n      setColumns(initColumns);\n    } else {\n      setColumns(JSON.parse(getColumns));\n    }\n\n    setLoaded(true);\n  }, []);\n\n  const saveColumns = columns => {\n    localStorage.setItem(\"columns\", JSON.stringify(columns));\n  };\n\n  const onDragEnd = result => {\n    const {\n      source,\n      destination\n    } = result;\n    if (!destination) return; //Delete\n\n    if (destination.droppableId === \"trash\") {\n      const sourceItems = columns.filter(column => column.title === source.droppableId)[0].items;\n      sourceItems.splice(source.index, 1);\n    } else {\n      //Different column\n      if (source.droppableId !== destination.droppableId) {\n        const sourceItems = columns.filter(column => column.title === source.droppableId)[0].items;\n        const destItems = columns.filter(column => column.title === destination.droppableId)[0].items;\n        if (destItems.length >= maxItems) return;\n        const [removed] = sourceItems.splice(source.index, 1);\n        destItems.splice(destination.index, 0, removed);\n      } else {\n        //Same column\n        const sourceItems = columns.filter(column => column.title === source.droppableId)[0].items;\n        const [removed] = sourceItems.splice(source.index, 1);\n        sourceItems.splice(destination.index, 0, removed);\n      }\n    }\n\n    saveColumns(columns);\n  };\n\n  const onAddCard = () => {};\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"header-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    alt: \"logo\",\n    src: KanbieLogo,\n    width: 28,\n    className: \"kanbie-logo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"kanbie\")), !!loaded && React.createElement(\"div\", {\n    className: \"main-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(DragDropContext, {\n    onDragEnd: onDragEnd,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, columns.map(column => React.createElement(Droppable, {\n    droppableId: column.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, (provided, snapshot) => React.createElement(\"div\", Object.assign({}, provided.droppableProps, {\n    ref: provided.innerRef,\n    style: {\n      background: snapshot.isDraggingOver ? \"#400033\" : \"#121212\",\n      minHeight: \"180px\"\n    },\n    className: \"droppable-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"column-header-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"column-heading\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, column.title), column.title === \"To-do\" ? React.createElement(CheckboxMarkedCircleOutlineIcon, {\n    size: 24,\n    color: \"#fff\",\n    style: {\n      marginBottom: \"8px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }) : column.title === \"Doing\" ? React.createElement(ProgressCheckIcon, {\n    size: 24,\n    color: \"#fff\",\n    style: {\n      marginBottom: \"8px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }) : React.createElement(CheckboxMarkedCircleIcon, {\n    size: 24,\n    color: \"#fff\",\n    style: {\n      marginBottom: \"8px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  })), column.items.map((item, i) => React.createElement(Draggable, {\n    key: item.id,\n    draggableId: item.content + item.id,\n    index: i,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, (provided, snapshot) => React.createElement(\"div\", Object.assign({}, provided.draggableProps, provided.dragHandleProps, {\n    ref: provided.innerRef,\n    style: {\n      userSelect: 'none',\n      backgroundColor: snapshot.isDragging ? \"#272727\" : \"#1a1a1a\",\n      ...provided.draggableProps.style\n    },\n    className: \"draggable-card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }), item.content))), provided.placeholder))), React.createElement(Droppable, {\n    droppableId: \"trash\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, (provided, snapshot) => React.createElement(\"div\", Object.assign({}, provided.droppableProps, {\n    ref: provided.innerRef,\n    style: {\n      background: snapshot.isDraggingOver ? \"#6e0000\" : \"#3d0000\",\n      width: \"20px\",\n      position: \"absolute\",\n      top: 0,\n      right: 0,\n      margin: \"12px\"\n    },\n    className: \"droppable-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }), React.createElement(DeleteForeverIcon, {\n    color: \"#fff\",\n    className: \"delete-icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  })))), React.createElement(\"div\", {\n    className: \"add-button-container droppable-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, React.createElement(PlusIcon, {\n    color: \"#fff\",\n    className: \"add-icon\",\n    size: 28,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/atude/projects/kanbie/src/App.js"],"names":["React","useState","useEffect","DragDropContext","Droppable","Draggable","CheckboxMarkedCircleOutlineIcon","CheckboxMarkedCircleIcon","ProgressCheckIcon","DeleteForeverIcon","PlusIcon","initColumns","maxItems","App","columns","setColumns","loaded","setLoaded","getColumns","localStorage","getItem","JSON","parse","saveColumns","setItem","stringify","onDragEnd","result","source","destination","droppableId","sourceItems","filter","column","title","items","splice","index","destItems","length","removed","onAddCard","KanbieLogo","map","provided","snapshot","droppableProps","innerRef","background","isDraggingOver","minHeight","marginBottom","item","i","id","content","draggableProps","dragHandleProps","userSelect","backgroundColor","isDragging","style","placeholder","width","position","top","right","margin"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport CheckboxMarkedCircleOutlineIcon from 'mdi-react/CheckboxMarkedCircleOutlineIcon';\nimport CheckboxMarkedCircleIcon from 'mdi-react/CheckboxMarkedCircleIcon';\nimport ProgressCheckIcon from 'mdi-react/ProgressCheckIcon';\nimport DeleteForeverIcon from 'mdi-react/DeleteForeverIcon';\nimport PlusIcon from 'mdi-react/PlusIcon';\n\nimport initColumns from './initColumns';\nimport KanbieLogo from './assets/kanbie-logo.svg';\n\nconst maxItems = 5;\n\nfunction App() {\n  const [columns, setColumns] = useState();\n  const [loaded, setLoaded] = useState(false);\n\n  useEffect(() => {\n    const getColumns = localStorage.getItem(\"columns\");\n\n    if(!getColumns) {\n      setColumns(initColumns);\n    } else {\n      setColumns(JSON.parse(getColumns));\n    }\n\n    setLoaded(true);\n  }, []);\n\n  const saveColumns = (columns) => {\n    localStorage.setItem(\"columns\", JSON.stringify(columns));\n  }\n\n  const onDragEnd = (result) => {\n    const { source, destination } = result;\n\n    if(!destination) return;\n\n    //Delete\n    if(destination.droppableId === \"trash\") {\n      const sourceItems = columns.filter((column => column.title === source.droppableId))[0].items;\n      sourceItems.splice(source.index, 1);\n    } else {\n      //Different column\n      if(source.droppableId !== destination.droppableId) {\n        const sourceItems = columns.filter((column => column.title === source.droppableId))[0].items;\n        const destItems = columns.filter((column => column.title === destination.droppableId))[0].items;\n        if(destItems.length >= maxItems) return;\n        const [removed] = sourceItems.splice(source.index, 1);\n        destItems.splice(destination.index, 0, removed);\n      } else {\n        //Same column\n        const sourceItems = columns.filter((column => column.title === source.droppableId))[0].items;\n        const [removed] = sourceItems.splice(source.index, 1);\n        sourceItems.splice(destination.index, 0, removed);\n      }\n    }\n\n    saveColumns(columns);\n  }\n\n  const onAddCard = () => {\n\n  }\n\n  return (\n    <div>\n      <div className=\"header-container\">\n        <img alt=\"logo\" src={KanbieLogo} width={28} className=\"kanbie-logo\"/>\n        <div className=\"header\">\n          kanbie\n        </div>\n      </div>\n      {!!loaded && \n      <div className=\"main-container\">\n        <DragDropContext\n          onDragEnd={onDragEnd}\n        >\n          {columns.map(column => (\n            <Droppable droppableId={column.title}>\n              {(provided, snapshot) => (\n                <div\n                  {...provided.droppableProps}\n                  ref={provided.innerRef}\n                  style={{\n                    background: snapshot.isDraggingOver ? \"#400033\" : \"#121212\",\n                    minHeight: \"180px\"\n                  }}\n                  className=\"droppable-container\"\n                > \n                  <div className=\"column-header-container\">\n                    <div className=\"column-heading\">{column.title}</div>\n                    {column.title === \"To-do\" ? \n                      <CheckboxMarkedCircleOutlineIcon size={24} color=\"#fff\" style={{marginBottom: \"8px\"}}/>\n                      : (column.title === \"Doing\" ?\n                      <ProgressCheckIcon size={24} color=\"#fff\" style={{marginBottom: \"8px\"}}/>\n                      : \n                      <CheckboxMarkedCircleIcon size={24} color=\"#fff\" style={{marginBottom: \"8px\"}}/>\n                      )\n                    }\n\n                  </div>\n                  {column.items.map((item, i) => (\n                    <Draggable key={item.id} draggableId={item.content + item.id} index={i}>\n                      {(provided, snapshot) => (\n                        <div \n                          {...provided.draggableProps}\n                          {...provided.dragHandleProps}\n                          ref={provided.innerRef}\n                          style={{\n                            userSelect: 'none',\n                            backgroundColor: snapshot.isDragging ? \"#272727\" : \"#1a1a1a\",\n                            ...provided.draggableProps.style\n                          }}\n                          className=\"draggable-card\"\n                        >\n                          {item.content}\n                        </div>\n                      )}\n                    </Draggable>\n                  ))}\n                  {provided.placeholder}\n                </div>\n              )}\n            </Droppable>\n          ))}\n          <Droppable droppableId=\"trash\">\n            {(provided, snapshot) => (\n              <div\n                {...provided.droppableProps}\n                ref={provided.innerRef}\n                style={{\n                  background: snapshot.isDraggingOver ? \"#6e0000\" : \"#3d0000\",\n                  width: \"20px\",\n                  position: \"absolute\",\n                  top: 0,\n                  right: 0,\n                  margin: \"12px\"\n                }}\n                className=\"droppable-container\"\n              > \n                <DeleteForeverIcon color=\"#fff\" className=\"delete-icon\"/>\n              </div>\n            )}  \n          </Droppable>\n        </DragDropContext>\n        <div className=\"add-button-container droppable-container\">\n          <PlusIcon color=\"#fff\" className=\"add-icon\" size={28}/>\n        </div>\n      </div>\n      }\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}