{"ast":null,"code":"var _jsxFileName = \"/home/atude/projects/kanbie/src/App.js\";\nimport React, { useState } from 'react';\nimport './App.css';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nconst initColumns = [{\n  title: \"To-do\",\n  items: [{\n    id: 1,\n    content: 'Add capability to add a card in a lane'\n  }, {\n    id: 2,\n    content: 'Add capability to add a card in a lane 2'\n  }, {\n    id: 10,\n    content: 'Add capability to add a card in a lane 3'\n  }]\n}, {\n  title: \"Doing\",\n  items: [{\n    id: 3,\n    content: 'Add capability to add a card in a lane'\n  }, {\n    id: 4,\n    content: 'Add capability to add a card in a lane 2'\n  }]\n}, {\n  title: \"Done\",\n  items: [{\n    id: 5,\n    content: 'Add capability to add a card in a lane'\n  }, {\n    id: 6,\n    content: 'Add capability to add a card in a lane 2'\n  }]\n}];\n\nfunction App() {\n  const [columns, setColumns] = useState(initColumns);\n\n  const onDragEnd = result => {\n    const {\n      source,\n      destination\n    } = result;\n    if (!destination) return; //Different column\n\n    if (source.droppableId !== destination.droppableId) {\n      const sourceColumn = columns.filter(column => column.title === source.droppableId)[0].items;\n      const destColumn = columns.filter(column => column.title === destination.droppableId)[0].items;\n    } else {\n      //Same column\n      const sourceColumn = columns.filter(column => column.title === source.droppableId)[0].items;\n      const [removed] = sourceColumn.splice(source.index, 1);\n      sourceColumn.splice(destination.index, 0, removed);\n    }\n\n    console.log(columns);\n  };\n\n  return React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      height: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(DragDropContext, {\n    onDragEnd: onDragEnd,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, columns.map(column => React.createElement(Droppable, {\n    droppableId: column.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, (provided, snapshot) => React.createElement(\"div\", Object.assign({}, provided.droppableProps, {\n    ref: provided.innerRef,\n    style: {\n      background: snapshot.isDraggingOver ? 'lightblue' : 'lightgrey',\n      padding: \"4px\",\n      margin: \"10px\",\n      width: \"200px\",\n      minHeight: \"400px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }), column.items.map((item, i) => React.createElement(Draggable, {\n    key: item.id,\n    draggableId: item.content + item.id,\n    index: i,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, (provided, snapshot) => React.createElement(\"div\", Object.assign({}, provided.draggableProps, provided.dragHandleProps, {\n    ref: provided.innerRef,\n    style: {\n      userSelect: 'none',\n      padding: \"16px\",\n      minHeight: \"50px\",\n      backgroundColor: snapshot.isDragging ? '#263b4a' : '#456c86',\n      color: \"white\",\n      ...provided.draggableProps.style\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }), item.content))), provided.placeholder)))));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/atude/projects/kanbie/src/App.js"],"names":["React","useState","DragDropContext","Droppable","Draggable","initColumns","title","items","id","content","App","columns","setColumns","onDragEnd","result","source","destination","droppableId","sourceColumn","filter","column","destColumn","removed","splice","index","console","log","display","justifyContent","height","map","provided","snapshot","droppableProps","innerRef","background","isDraggingOver","padding","margin","width","minHeight","item","i","draggableProps","dragHandleProps","userSelect","backgroundColor","isDragging","color","style","placeholder"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\n\nconst initColumns = [\n  {\n    title: \"To-do\",\n    items: [\n      {\n        id: 1,\n        content: 'Add capability to add a card in a lane'\n      },\n      {\n        id: 2,\n        content: 'Add capability to add a card in a lane 2'\n      },\n      {\n        id: 10,\n        content: 'Add capability to add a card in a lane 3'\n      },\n    ]\n  },\n  {\n    title: \"Doing\",\n    items: [\n      {\n        id: 3,\n        content: 'Add capability to add a card in a lane'\n      },\n      {\n        id: 4,\n        content: 'Add capability to add a card in a lane 2'\n      },\n    ]\n  },\n  {\n    title: \"Done\",\n    items: [\n      {\n        id: 5,\n        content: 'Add capability to add a card in a lane'\n      },\n      {\n        id: 6,\n        content: 'Add capability to add a card in a lane 2'\n      },\n    ]\n  },\n];\n\nfunction App() {\n  const [columns, setColumns] = useState(initColumns);\n\n  const onDragEnd = (result) => {\n    const { source, destination } = result;\n\n    if(!destination) return;\n\n    //Different column\n    if(source.droppableId !== destination.droppableId) {\n      const sourceColumn = columns.filter((column => column.title === source.droppableId))[0].items;\n      const destColumn = columns.filter((column => column.title === destination.droppableId))[0].items;\n    } else {\n      //Same column\n      const sourceColumn = columns.filter((column => column.title === source.droppableId))[0].items;\n      const [removed] = sourceColumn.splice(source.index, 1);\n      sourceColumn.splice(destination.index, 0, removed);\n    }\n\n    console.log(columns)\n  }\n\n  return (\n    <div \n      style={{ \n        display: \"flex\",\n        justifyContent: \"center\",\n        height: \"100%\"\n      }}\n    >\n      <DragDropContext\n        onDragEnd={onDragEnd}\n      >\n        {columns.map(column => (\n          <Droppable droppableId={column.title}>\n            {(provided, snapshot) => (\n              <div\n                {...provided.droppableProps}\n                ref={provided.innerRef}\n                style={{\n                  background: snapshot.isDraggingOver ? 'lightblue' : 'lightgrey',\n                  padding: \"4px\",\n                  margin: \"10px\",\n                  width: \"200px\",\n                  minHeight: \"400px\",\n                }}\n              >\n                {column.items.map((item, i) => (\n                  <Draggable key={item.id} draggableId={item.content + item.id} index={i}>\n                    {(provided, snapshot) => (\n                      <div \n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                        ref={provided.innerRef}\n                        style={{\n                          userSelect: 'none',\n                          padding: \"16px\",\n                          minHeight: \"50px\",\n                          backgroundColor: snapshot.isDragging ? '#263b4a' : '#456c86',\n                          color: \"white\",\n                          ...provided.draggableProps.style\n                        }}\n                      >\n                        {item.content}\n                      </div>\n                    )}\n                  </Draggable>\n                ))}\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n        ))}\n      </DragDropContext>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}